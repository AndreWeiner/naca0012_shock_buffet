/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v2006                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

scale 0.6010500;

domain
{
    xMin -20;
    xMax  20;
    yMin -10;   
    yMax  10;
    zMin -0.01;
    zMax  0.01;

    // Number of cells
    yCells  240; // airfoil to far field
    yGap     32;  // resolution of trailing edge
    xUCells 240;  // upstream
    xMCellsLower 210; // middle low
    xMCellsUpper 210; // middle up
    xDCells 300; // downstream


    // Mesh grading
    yGrading       10000;  // airfoil to far field
    yGradingFar     1000;  // airfoil to far field at xMax
    xUGrading          5;  // towards centre upstream
    xUGradingInv     0.2;  // inverse of xUGrading
    xUGradingUp       10;  // towards centre upstream, farfield
    xUGradingUpInv   0.1;  // inverse of xUGrading, farfield
    xMGrading        1.0;  // towards trailing edge
    xMGradingInv     1.0;  // towards trailing edge
    xMGradingUp     10.0;  // towards trailing edge, farfield
    xMGradingUpInv   0.1;  // towards trailing edge, farfield
    xDGrading        100;  // downstream
    xDGradingInv    0.01;  // inverse of downstream grading
}

airfoil
{
    xLead            0;                               // 12
    yLead            0;                               // 11, 12
    
    xThick           0.3;                             // 0, 13, 16, 19, 24
    xTrail           1;                               // 15, 18

    yTrailUpper      0.012;                           // 18
    yTrailLower     -0.012;                           // 15
    yUpper           0.06;                            // 16
    yLower          -0.06;                            // 13

    xMidTrailShift   #eval "$xTrail          - 0.2";   // 14, 17
    yMidTrailShiftD  #eval "$yTrailLower     - 0.02";  // 14
    xMidShift        #eval "$xMidTrailShift  + 0.1";   // 6, 20
    yMidShiftD       #eval "$yMidTrailShiftD - 0.2";   // 6
    xMidShiftFar     #eval "$xMidShift       + 0.5";   // 1, 25
    xTrailShift      #eval "$xTrail          + 0.2";   // 7, 21
    yTrailShiftD     #eval "$yTrailLower     - 0.2";   // 7
    xTrailShiftFar   #eval "$xTrailShift     + 0.5";   // 2, 26
    xMidFar          #eval "$xTrailShift     + 4.5";   // 3, 8, 22, 27 
    yMidFarD         #eval "$yTrailShiftD    - 1";     // 8, 9
    yThickShiftD     #eval "$yThick          - 0.2";   // 5
    xLeadShift       #eval "$xLead           - 0.3";   // 11
    
    yMidFarU         #eval "-1 * $yMidFarD";           // 22, 23
    yTrailShiftU     #eval "-1 * $yTrailShiftD";       // 21
    yMidTrailShiftU  #eval "-1 * $yMidTrailShiftD";    // 17
    yMidShiftU       #eval "-1 * $yMidShiftD";         // 20
    yThickShiftU     #eval "-1 * $yThickShiftD";       // 19
    
}

geometry
{
    airfoil
    {
        type   triSurfaceMesh;
        file   "naca0012.stl";
    }
    cylinder
    {
        type   cylinder;
        point1 ($:airfoil.xThick 0 -1e3);
        point2 ($:airfoil.xThick 0  1e3);
        radius $:domain.yMax;
    }
}

vertices
(
    project ($airfoil.xThick $domain.yMin $domain.zMin) (cylinder)                    // 0
    ($airfoil.xMidShiftFar $domain.yMin $domain.zMin)                                 // 1
    ($airfoil.xTrailShiftFar $domain.yMin $domain.zMin)                               // 2
    ($airfoil.xMidFar $domain.yMin $domain.zMin)                                      // 3
    ($domain.xMax $domain.yMin $domain.zMin)                                          // 4
    ($airfoil.xThick $airfoil.yThickShiftD $domain.zMin)                              // 5
    ($airfoil.xMidShift $airfoil.yMidShiftD $domain.zMin)                             // 6
    ($airfoil.xTrailShift $airfoil.yTrailShiftD $domain.zMin)                         // 7
    ($airfoil.xMidFar $airfoil.yMidFarD $domain.zMin)                                 // 8
    ($domain.xMax $airfoil.yMidFarD $domain.zMin)                                     // 9
    project ($domain.xMin    $airfoil.yLead  $domain.zMin) (cylinder)                 // 10
    ($airfoil.xLeadShift $airfoil.yLead $domain.zMin)                                 // 11
    project ($airfoil.xLead  $airfoil.yLead  $domain.zMin) (airfoil)                  // 12
    project ($airfoil.xThick $airfoil.yLower $domain.zMin) (airfoil)                  // 13
    project ($airfoil.xMidTrailShift $airfoil.yMidTrailShiftD $domain.zMin) (airfoil) // 14
    project ($airfoil.xTrail $airfoil.yTrailLower $domain.zMin) (airfoil)             // 15
    project ($airfoil.xThick $airfoil.yUpper $domain.zMin) (airfoil)                  // 16
    project ($airfoil.xMidTrailShift $airfoil.yMidTrailShiftU $domain.zMin) (airfoil) // 17
    project ($airfoil.xTrail $airfoil.yTrailUpper $domain.zMin) (airfoil)             // 18
    ($airfoil.xThick $airfoil.yThickShiftU $domain.zMin)                              // 19
    ($airfoil.xMidShift $airfoil.yMidShiftU $domain.zMin)                             // 20
    ($airfoil.xTrailShift $airfoil.yTrailShiftU $domain.zMin)                         // 21
    ($airfoil.xMidFar $airfoil.yMidFarU $domain.zMin)                                 // 22
    ($domain.xMax $airfoil.yMidFarU $domain.zMin)                                     // 23
    project ($airfoil.xThick $domain.yMax $domain.zMin) (cylinder)                    // 24
    ($airfoil.xMidShiftFar $domain.yMax $domain.zMin)                                 // 25
    ($airfoil.xTrailShiftFar $domain.yMax $domain.zMin)                               // 26
    ($airfoil.xMidFar $domain.yMax $domain.zMin)                                      // 27
    ($domain.xMax $domain.yMax $domain.zMin)                                          // 28
 
    project ($airfoil.xThick $domain.yMin $domain.zMax) (cylinder)                    // 29
    ($airfoil.xMidShiftFar $domain.yMin $domain.zMax)                                 // 30
    ($airfoil.xTrailShiftFar $domain.yMin $domain.zMax)                               // 31
    ($airfoil.xMidFar $domain.yMin $domain.zMax)                                      // 32
    ($domain.xMax $domain.yMin $domain.zMax)                                          // 33
    ($airfoil.xThick $airfoil.yThickShiftD $domain.zMax)                              // 34
    ($airfoil.xMidShift $airfoil.yMidShiftD $domain.zMax)                             // 35
    ($airfoil.xTrailShift $airfoil.yTrailShiftD $domain.zMax)                         // 36
    ($airfoil.xMidFar $airfoil.yMidFarD $domain.zMax)                                 // 37
    ($domain.xMax $airfoil.yMidFarD $domain.zMax)                                     // 38
    project ($domain.xMin    $airfoil.yLead  $domain.zMax) (cylinder)                 // 39
    ($airfoil.xLeadShift $airfoil.yLead $domain.zMax)                                 // 40
    project ($airfoil.xLead  $airfoil.yLead  $domain.zMax) (airfoil)                  // 41
    project ($airfoil.xThick $airfoil.yLower $domain.zMax) (airfoil)                  // 42
    project ($airfoil.xMidTrailShift $airfoil.yMidTrailShiftD $domain.zMax) (airfoil) // 43
    project ($airfoil.xTrail $airfoil.yTrailLower $domain.zMax) (airfoil)             // 44
    project ($airfoil.xThick $airfoil.yUpper $domain.zMax) (airfoil)                  // 45
    project ($airfoil.xMidTrailShift $airfoil.yMidTrailShiftU $domain.zMax) (airfoil) // 46
    project ($airfoil.xTrail $airfoil.yTrailUpper $domain.zMax) (airfoil)             // 47
    ($airfoil.xThick $airfoil.yThickShiftU $domain.zMax)                              // 48
    ($airfoil.xMidShift $airfoil.yMidShiftU $domain.zMax)                             // 49
    ($airfoil.xTrailShift $airfoil.yTrailShiftU $domain.zMax)                         // 50
    ($airfoil.xMidFar $airfoil.yMidFarU $domain.zMax)                                 // 51
    ($domain.xMax $airfoil.yMidFarU $domain.zMax)                                     // 52
    project ($airfoil.xThick $domain.yMax $domain.zMax) (cylinder)                    // 53
    ($airfoil.xMidShiftFar $domain.yMax $domain.zMax)                                 // 54
    ($airfoil.xTrailShiftFar $domain.yMax $domain.zMax)                               // 55
    ($airfoil.xMidFar $domain.yMax $domain.zMax)                                      // 56
    ($domain.xMax $domain.yMax $domain.zMax)                                          // 57

);

blocks
(   
    // 0
    hex (40 34 29 39 11 5 0 10)
    (240 240 1)
    edgeGrading (1 1 1 1 1 1 1 1 1 1 1 1)

    // 1
    hex (35 30 29 34 6 1 0 5)
    (240 240 1)
    edgeGrading (1 1 1 1 1 1 1 1 1 1 1 1)

    // 2
    hex (36 31 30 35 7 2 1 6)
    (240 240 1)
    edgeGrading (1 1 1 1 1 1 1 1 1 1 1 1)

    // 3
    hex (37 32 31 36 8 3 2 7)
    (240 240 1)
    edgeGrading (1 1 1 1 1 1 1 1 1 1 1 1)

    // 4
    hex (38 33 32 37 9 4 3 8)
    (240 240 1)
    edgeGrading (1 1 1 1 1 1 1 1 1 1 1 1)

    // 5
    hex (41 42 34 40 12 13 5 11)
    (240 240 1)
    edgeGrading (1 1 1 1 1 1 1 1 1 1 1 1)

    // 6
    hex (42 43 35 34 13 14 6 5)
    (240 240 1)
    edgeGrading (1 1 1 1 1 1 1 1 1 1 1 1)

    // 7
    hex (43 44 36 35 14 15 7 6)
    (240 240 1)
    edgeGrading (1 1 1 1 1 1 1 1 1 1 1 1)

    // 8
    hex (47 50 36 44 18 21 7 15)
    (240 240 1)
    edgeGrading (1 1 1 1 1 1 1 1 1 1 1 1)

    // 9
    hex (50 51 37 36 21 22 8 7)
    (240 240 1)
    edgeGrading (1 1 1 1 1 1 1 1 1 1 1 1)

    // 10
    hex (51 52 38 37 22 23 9 8)
    (240 240 1)
    edgeGrading (1 1 1 1 1 1 1 1 1 1 1 1)

    // 11
    hex (48 45 41 40 19 16 12 11)
    (240 240 1)
    edgeGrading (1 1 1 1 1 1 1 1 1 1 1 1)

    // 12
    hex (48 49 46 45 19 20 17 16)
    (240 240 1)
    edgeGrading (1 1 1 1 1 1 1 1 1 1 1 1)

    // 13
    hex (49 50 47 46 20 21 18 17)
    (240 240 1)
    edgeGrading (1 1 1 1 1 1 1 1 1 1 1 1)

    // 14
    hex (53 48 40 39 24 19 11 10)
    (240 240 1)
    edgeGrading (1 1 1 1 1 1 1 1 1 1 1 1)

    // 15
    hex (54 49 48 53 25 20 19 24)
    (240 240 1)
    edgeGrading (1 1 1 1 1 1 1 1 1 1 1 1)

    // 16
    hex (55 50 49 54 26 21 20 25)
    (240 240 1)
    edgeGrading (1 1 1 1 1 1 1 1 1 1 1 1)

    // 17
    hex (56 51 50 55 27 22 21 26)
    (240 240 1)
    edgeGrading (1 1 1 1 1 1 1 1 1 1 1 1)

    // 18
    hex (57 52 51 56 28 23 22 27)
    (240 240 1)
    edgeGrading (1 1 1 1 1 1 1 1 1 1 1 1)

);


edges
(
    project 12 13 (airfoil)
    project 13 14 (airfoil)
    project 14 15 (airfoil)
    project 12 16 (airfoil)
    project 16 17 (airfoil)
    project 17 18 (airfoil)

    project 41 42 (airfoil)
    project 42 43 (airfoil)
    project 43 44 (airfoil)
    project 41 45 (airfoil)
    project 45 46 (airfoil)
    project 46 47 (airfoil)
 
    project 10 0  (cylinder)
    project 10 24 (cylinder)
    project 39 29 (cylinder)
    project 39 53 (cylinder)
);

boundary
(
    airfoil
    {
        type wall;
        faces
        (
            (41 42 13 12)
            (42 43 14 13)
            (43 44 15 14)
            (41 45 16 12)
            (45 46 17 16)
            (46 47 18 17)
            (47 44 15 18)
        );
    }

    inlet
    {
        type patch;
        inGroups (freestream);
        faces
        (
            (10 0 29 39)
            (29 30 1 0)
            (30 31 2 1)
            (31 32 3 2)
            (32 33 4 3)
            (10 24 53 39)
            (53 54 25 24)
            (54 55 26 25)
            (55 56 27 26)
            (56 57 28 27)
        );
    }

    outlet
    {
        type patch;
        inGroups (freestream);
        faces
        (
            (33 38 9 4)
            (38 52 23 9)
            (52 57 28 23)
        );
    }

    back
    {
        type empty;
        faces
        (
            (11 5 0 10)    // 0
            (5 6 1 0)      // 1
            (6 7 2 1)      // 2
            (7 8 3 2)      // 3
            (8 9 4 3)      // 4
            (12 13 5 11)   // 5
            (13 14 6 5)    // 6
            (14 15 7 6)    // 7
            (18 21 7 15)   // 8
            (21 22 8 7)    // 9
            (22 23 9 8)    // 10
            (19 16 12 11)  // 11
            (19 20 17 16)  // 12
            (20 21 18 17)  // 13
            (24 19 11 10)  // 14
            (24 25 20 19)  // 15
            (25 26 21 20)  // 16
            (26 27 22 21)  // 17
            (27 28 23 22)  // 18
        );
    }

    front
    {
        type empty;
        faces
        (
            (40 34 29 39)  // 0
            (34 35 30 29)  // 1
            (35 36 31 30)  // 2
            (36 37 32 31)  // 3
            (37 38 33 32)  // 4
            (41 42 34 40)  // 5
            (42 43 35 34)  // 6
            (43 44 36 35)  // 7
            (47 50 36 44)  // 8
            (50 51 37 36)  // 9
            (51 52 38 37)  // 10
            (48 45 41 40)  // 11
            (48 49 46 45)  // 12
            (49 50 47 46)  // 13
            (53 48 40 39)  // 14
            (53 54 49 48)  // 15
            (54 55 50 49)  // 16
            (55 56 51 50)  // 17
            (56 57 52 51)  // 18

        );
    }

);

// ************************************************************************* //
